# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: meme-police
variablesResolutionMode: 20210326

useDotenv: true
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-python-requirements
provider:
  name: aws
  region: eu-central-1
  runtime: python3.8
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
      - Effect: Allow
        Action:
          - 'dynamodb:Query'
          - 'dynamodb:Scan'
          - 'dynamodb:GetItem'
          - 'dynamodb:PutItem'
        Resource:
          - "Fn::GetAtt": [picturesTable, Arn]
  environment:
    PICTURES_TABLE_NAME: meme-police-${sls:stage}-${env:PICTURES_TABLE_NAME}

functions:
  check-meme:
    handler: handler.check_duplicate_meme_handler
    environment:
      HARDCODED_USER: ${env:HARDCODED_USER}
      HARDCODED_PASSWORD: ${env:HARDCODED_PASSWORD}
    events:
      - http:
          path: check-meme
          method: post


resources: # CloudFormation template syntax from here on.
  Resources:
    picturesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PICTURES_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: url
            AttributeType: S
        KeySchema:
          - AttributeName: url
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  pythonRequirements:
    dockerizePip: true